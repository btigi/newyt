@page
@model IndexModel
@{
    ViewData["Title"] = "New YouTube Videos";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Unwatched Videos (@Model.Videos.Count)</h2>
        <div>
            <a asp-page="/Channels" class="btn btn-outline-info">View Channels</a>
            <a asp-page="/WatchedVideos" class="btn btn-outline-success">View Watched Videos</a>
            <a asp-page="/AddChannel" class="btn btn-primary">Add New Channel</a>
            <form method="post" asp-page-handler="RefreshVideos" class="d-inline">
                <button type="submit" class="btn btn-outline-secondary">Refresh Videos</button>
            </form>
        </div>
    </div>

    <div class="mb-4">
        <div class="row align-items-center">
            <div class="col-md-4">
                <label for="sortSelect" class="form-label">Sort by:</label>
                <select id="sortSelect" class="form-select" onchange="changeSortOrder(this.value)">
                    <option value="DateNewest" selected="@(Model.SortBy == SortOption.DateNewest)">@Model.GetSortDisplayName(SortOption.DateNewest)</option>
                    <option value="DateOldest" selected="@(Model.SortBy == SortOption.DateOldest)">@Model.GetSortDisplayName(SortOption.DateOldest)</option>
                    <option value="ChannelAZ" selected="@(Model.SortBy == SortOption.ChannelAZ)">@Model.GetSortDisplayName(SortOption.ChannelAZ)</option>
                    <option value="ChannelZA" selected="@(Model.SortBy == SortOption.ChannelZA)">@Model.GetSortDisplayName(SortOption.ChannelZA)</option>
                    <option value="TitleAZ" selected="@(Model.SortBy == SortOption.TitleAZ)">@Model.GetSortDisplayName(SortOption.TitleAZ)</option>
                    <option value="TitleZA" selected="@(Model.SortBy == SortOption.TitleZA)">@Model.GetSortDisplayName(SortOption.TitleZA)</option>
                </select>
            </div>
            <div class="col-md-8">
                <small class="text-muted">
                    <i class="bi bi-info-circle"></i>
                    Currently sorted by: <strong>@Model.GetSortDisplayName(Model.SortBy)</strong>
                </small>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model.Videos.Count == 0)
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="bi bi-youtube" style="font-size: 4rem; color: #dc3545;"></i>
            </div>
            <h4>No unwatched videos found</h4>
            <p class="text-muted">Add some YouTube channels to get started!</p>
            <a asp-page="/AddChannel" class="btn btn-primary">Add Your First Channel</a>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var video in Model.Videos)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card h-100">
                        @if (Model.ShowThumbnails)
                        {
                            @if (!string.IsNullOrEmpty(video.ThumbnailPath))
                            {
                                <div class="position-relative">
                                    <img src="@video.ThumbnailPath" class="card-img-top" alt="@video.Title" 
                                         style="height: 200px; object-fit: cover;" loading="lazy" />
                                    <div class="position-absolute top-0 end-0 p-2">
                                        <span class="badge bg-dark bg-opacity-75">@video.Channel.Name</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                    <div class="text-center text-muted">
                                        <i class="bi bi-image" style="font-size: 2rem;"></i>
                                        <div class="mt-2">
                                            <small>@video.Channel.Name</small>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        <div class="card-body">
                            @if (!Model.ShowThumbnails)
                            {
                                <div class="mb-2">
                                    <span class="badge bg-primary">@video.Channel.Name</span>
                                </div>
                            }
                            <h5 class="card-title" style="font-size: 1rem; line-height: 1.3;">@video.Title</h5>
                            <p class="card-text">
                                <small class="text-muted">
                                    <i class="bi bi-calendar3"></i> @video.PublishedAt.ToString("MMM dd, yyyy")
                                </small>
                            </p>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-flex justify-content-between">
                                <a href="@video.Url" target="_blank" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-play-circle"></i> Watch
                                </a>
                                <form method="post" asp-page-handler="MarkWatched" class="d-inline">
                                    <input type="hidden" name="videoId" value="@video.Id" />
                                    <button type="submit" class="btn btn-success btn-sm">
                                        <i class="bi bi-check-circle"></i> Mark Watched
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }


</div>

<script>
function changeSortOrder(sortValue) {
    const url = new URL(window.location);
    url.searchParams.set('SortBy', sortValue);
    
    // Use view transition if supported
    if (document.startViewTransition) {
        document.startViewTransition(() => {
            window.location.href = url.toString();
        });
    } else {
        window.location.href = url.toString();
    }
}
</script>